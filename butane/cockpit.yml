variant: fcos
version: 1.6.0

storage:
  files:
    - path: /etc/ssh/sshd_config.d/40-disable-passwords.conf
      mode: 0644
      overwrite: true
      contents:
        inline: |
          # Disable password logins by default.
          # https://github.com/coreos/fedora-coreos-tracker/issues/138
          # This file must sort before 50-redhat.conf, which enables
          # PasswordAuthentication.
          PasswordAuthentication yes
    - path: /etc/containers/systemd/cockpit.container
      mode: 0644
      contents:
        local: ./containers/cockpit.container
    - path: /etc/containers/systemd/caddy.container
      mode: 0644
      contents:
        local: ./containers/caddy.container
    - path: /etc/caddy.conf
      mode: 0644
      contents:
        inline: |
          :443 {
            redir https://{host}:9090{uri} permanent
          }
          :80 {
            redir https://{host}:9090{uri} permanent
          }

    - path: /etc/nftables.conf
      mode: 0644
      contents:
        local: ./configs/nftables.conf
    - path: /etc/polkit-1/rules.d/50-libvirt-remote-access.rules
      mode: 0644
      contents:
        inline: |
          polkit.addRule(function(action, subject) {
            if (action.id == "org.libvirt.unix.manage" && subject.isInGroup("wheel")) {
              return polkit.Result.YES;
            }
          });

    - path: /etc/containers/systemd/jellyfin.container
      mode: 0644
      contents:
        local: ./containers/jellyfin.container
systemd:
  units:
    - name: cockpit.service
      enabled: false

    - name: enable-virtualization.service
      enabled: true
      contents: |
        [Unit]
        Description=Enable all virtualization sockets

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/systemctl enable --now libvirtd
        ExecStartPost=/usr/bin/systemctl disable enable-virtualization.service

        [Install]
        WantedBy=multi-user.target

    - name: install-cockpit.service
      enabled: true
      contents: |
        [Unit]
        Description=Install software packages via rpm-ostree
        Wants=network-online.target
        After=network-online.target
        ConditionFirstBoot=yes

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/rpm-ostree install --reboot cockpit-system cockpit-ostree cockpit-podman libvirt qemu-kvm cockpit-machines cockpit-storaged cockpit-files cockpit-networkmanager cockpit-sosreport cockpit-kdump cockpit-selinux pcp-zeroconf
        ExecStartPre=/usr/bin/systemctl disable install-cockpit.service

        [Install]
        WantedBy=multi-user.target

    - name: nightly-shutdown.service
      enabled: true
      contents: |
        [Unit]
        Description=Power off the system at 21:30
        After=network.target

        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/shutdown -h 21:30

        [Install]
        WantedBy=multi-user.target

    - name: wake-on-lan.service
      enabled: true
      contents: |
        [Unit]
        Description=Power on the system (just once after shutdown)
        Wants=network-online.target
        After=network-online.target

        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/sh -c 'dev=$(ip -br link | awk '\''$2=="UP" && $1!="lo" {print $1; exit}'\''); if [ -n "$dev" ]; then ethtool -s "$dev" wol g && echo "WOL enabled on $dev"; fi'

        [Install]
        WantedBy=multi-user.target

    - name: wake-on-alarm.service
      enabled: true
      contents: |
        [Unit]
        Description=Set wakeup alarm for next boot
        Before=poweroff.target halt.target reboot.target

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/rtcwake -m no -t $(date +%s -d 'tomorrow 10:00')

        [Install]
        WantedBy=poweroff.target halt.target reboot.target
